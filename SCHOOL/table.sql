-- Create the STUDENTS table
CREATE TABLE Students (
    student_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR2(50) NOT NULL,
    last_name VARCHAR2(50) NOT NULL,
    date_of_birth DATE NOT NULL,
    gender CHAR(1) CHECK (gender IN ('M', 'F')),
    address VARCHAR2(255),
    phone_number VARCHAR2(15),
    email VARCHAR2(100) UNIQUE,
    class_id NUMBER REFERENCES Classes(class_id)
);

-- Create the TEACHERS table
CREATE TABLE Teachers (
    teacher_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR2(50) NOT NULL,
    last_name VARCHAR2(50) NOT NULL,
    qualification VARCHAR2(100),
    email VARCHAR2(100) UNIQUE NOT NULL,
    phone_number VARCHAR2(15),
    address VARCHAR2(255),
    hire_date DATE DEFAULT SYSDATE
);

-- Create the CLASSES table
CREATE TABLE Classes (
    class_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    class_name VARCHAR2(50) UNIQUE NOT NULL,
    teacher_id NUMBER REFERENCES Teachers(teacher_id)
);

-- Create the SUBJECTS table
CREATE TABLE Subjects (
    subject_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    subject_name VARCHAR2(100) NOT NULL,
    class_id NUMBER REFERENCES Classes(class_id)
);

-- Create the ENROLLMENTS table
CREATE TABLE Enrollments (
    enrollment_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    student_id NUMBER REFERENCES Students(student_id) ON DELETE CASCADE,
    class_id NUMBER REFERENCES Classes(class_id) ON DELETE CASCADE,
    enrollment_date DATE DEFAULT SYSDATE
);

-- Create the ATTENDANCE table
CREATE TABLE Attendance (
    attendance_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    student_id NUMBER REFERENCES Students(student_id) ON DELETE CASCADE,
    class_id NUMBER REFERENCES Classes(class_id),
    attendance_date DATE DEFAULT SYSDATE,
    status VARCHAR2(20) CHECK (status IN ('Present', 'Absent', 'Late'))
);

-- Create the EXAMS table
CREATE TABLE Exams (
    exam_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    exam_name VARCHAR2(100) NOT NULL,
    subject_id NUMBER REFERENCES Subjects(subject_id),
    exam_date DATE NOT NULL
);

-- Create the RESULTS table
CREATE TABLE Results (
    result_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    student_id NUMBER REFERENCES Students(student_id) ON DELETE CASCADE,
    exam_id NUMBER REFERENCES Exams(exam_id),
    score NUMBER(5, 2) CHECK (score BETWEEN 0 AND 100),
    remarks VARCHAR2(255)
);

-- Create the ADMIN table
CREATE TABLE Admin (
    admin_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR2(50) UNIQUE NOT NULL,
    password VARCHAR2(100) NOT NULL,
    email VARCHAR2(100) UNIQUE NOT NULL
);

-- Create the GRADES table (optional)
CREATE TABLE Grades (
    grade_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    grade VARCHAR2(2) UNIQUE NOT NULL,
    min_score NUMBER(5, 2) NOT NULL,
    max_score NUMBER(5, 2) NOT NULL
);
